<?xml version="1.0" encoding="UTF-8"?>

<chapter xml:id="rapid">
	<title>Rapid Development Using Vaadin and Roo</title>

    <para>
        This chapter presents a tutorial for developing a basic application using rapid
        application development tools: Spring Roo and Vaadin Plugin for Eclipse. The
        application includes database binding with JPAContainer, internationalization, and
        testing with Vaadin TestBench.
    </para>

    <section xml:id="rapid.overview">
        <title>Overview</title>

        <para>
            In this tutorial, we develop a simple application while demonstrating the
            basic tasks of making a typical business application:
        </para>

        <itemizedlist>
            <listitem>
                <para>
                    Creating a business data model using Roo
                </para>
            </listitem>
            <listitem>
                <para>
                    Database binding using Java Persistence API (JPA) and the JPAContainer add-on
                </para>
            </listitem>
            <listitem>
                <para>
                    Creation of CRUD views using the Vaadin Plugin for Spring Roo
                </para>
            </listitem>
            <listitem>
                <para>
                    Customization of views using Vaadin Plugin for Eclipse
                </para>
            </listitem>
            <listitem>
                <para>
                    Using the Vaadin Calendar add-on
                </para>
            </listitem>
            <listitem>
                <para>
                    User login with authentication and authorization
                </para>
            </listitem>
            <listitem>
                <para>
                    Internationalization
                </para>
            </listitem>
            <listitem>
                <para>
                    Using the Vaadin TestBench for regression testing
                </para>
            </listitem>
            <listitem>
                <para>
                    Deploying the application to Cloud Foundry
                </para>
            </listitem>
        </itemizedlist>

        <para>
            Spring Roo is a rapid development tool for Java applications. It generates
            code that uses the Spring Framework, Java Persistence API, and Apache
            Maven. It also allows extending its functionality using add-ons, such as the
            Vaadin Plugin for Spring Roo. The Vaadin add-on can generate user interface
            views based on the data model definitions given to Roo. These views can be
            customized and combined with views made with the visual editor of the Vaadin
            Plugin for Eclipse.
        </para>

        <para>
             Vaadin JPAContainer is a <classname>Container</classname> that communicates
             with a JPA implementation of your choice, which in turn usually communicates
             with virtually any SQL database you choose. Then by placing the JPAContainer
             into a component such as a <classname>Table</classname> (in editable mode),
             you get a no-brainer CRUD component. As the edited table data is updated to
             the JPAContainer, which is linked to the JPA implementation, everything you
             do in the UI can immediately be reflected back to the database. JPAContainer
             is dual-licensed with the open source AGPL for free projects and CVAL for
             commercial applications.
        </para>

        <simplesect xml:id="rapid.overview.demoproject">
            <title>Demo Application</title>

            <para>
                For the purpose of this tutorial, we develop a simple business
                application. The work hour reporting application allows an employee to
                report work done for different projects.
            </para>

            <para>
                For authentication, the application will have a login screen, where the
                user can also select the language. Business tasks are done in the main
                view, which will have a typical layout with a menu bar.
            </para>

        </simplesect>

    </section>


    &book.part1.rapid.environment;
    &book.part1.rapid.datamodel;
    &book.part1.rapid.crudviews;
    &book.part1.rapid.addons;
    &book.part1.rapid.viewcustomization;
    &book.part1.rapid.auth;
    &book.part1.rapid.i18n;
    &book.part1.rapid.testing;
    &book.part1.rapid.exception;
    &book.part1.rapid.cloudfoundry;

</chapter>
	
<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:nil
sgml-shorttag:nil
sgml-namecase-general:nil
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:4
sgml-indent-data:t
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:("/etc/sgml/catalog" "/usr/share/xemacs21/xemacs-packages/etc/psgml-dtds/CATALOG")
sgml-local-ecat-files:("ECAT" "~/sgml/ECAT" "/usr/share/sgml/ECAT" "/usr/local/share/sgml/ECAT" "/usr/local/lib/sgml/ECAT")
End:
-->
