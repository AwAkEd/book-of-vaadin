<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="rapid.environment">
    <title>Setting Up the Environment</title>
    
    <para>
        Let us begin with setting up the environment and creating the project. The
        tutorial requires installation of:
    </para>

    <itemizedlist>
        <listitem>
            <para>
                Spring Roo (bundled with the SpringSource Tool Suite)
            </para>
        </listitem>

        <listitem>
            <para>
                Vaadin Plugin for Eclipse
            </para>
        </listitem>

        <listitem>
            <para>
                Vaadin Plugin for Spring Roo
            </para>
        </listitem>

        <listitem>
            <para>
                Vaadin Calendar Add-on
            </para>
        </listitem>

        <listitem>
            <para>
                Vaadin TestBench Add-on
            </para>
        </listitem>
    </itemizedlist>

    <para>
        The installation of Vaadin add-ons is covered later in <xref
        linkend="rapid.addons"/> and Vaadin TestBench in <xref linkend="rapid.testing"/>.
    </para>

    <section xml:id="rapid.environment.roo">
        <title>Installing Spring Roo</title>

        <para>
            The easiest way to get Spring Roo is to install the SpringSource Tool Suite
            (STS), which is a distribution of the Eclipse IDE packaged with Roo
            integration, among other things. You can also install Spring Roo as a
            command-line tool.
        </para>

        <para>
            You can download the SpringSource Tool Suite from <link
            xlink:href="http://www.springsource.com/developer/sts">http://www.springsource.com/developer/sts</link>. Please
            follow the installation instructions at the website. After installing, you can
            start STS by running the <filename>STS</filename> executable in the
            installation folder.
        </para>

        <para>
            You need to install the Vaadin Plugin for Eclipse in STS. Please follow the
            instructions given in <xref
            linkend="getting-started.environment.eclipse-plugin"/>.
        </para>
    </section>

    <section xml:id="rapid.environment.project">
        <title>Creating the Project</title>

        <para>
            You can create a new Spring Roo project as follows:
        </para>

        <orderedlist>
            <listitem>
                <para>Select
                <menuchoice><guimenu>File</guimenu><guisubmenu>New</guisubmenu><guimenuitem>Spring
                Roo Project</guimenuitem></menuchoice>.</para>
            </listitem>

            <listitem>
                <para>Give the project a <guilabel>Project name</guilabel>. The name must
                be a proper identifier, that is, no spaces, etc.</para>
            </listitem>

            <listitem>
                <para>Give the project a <guilabel>Top-level package name</guilabel>, such
                as <literal>com.example.rapid</literal>.</para>
            </listitem>

            <listitem>
                <para>Make any other necessary project settings. None are required in this
                tutorial example. Finally, click <guibutton>Next</guibutton> and
                <guibutton>Finish</guibutton> to create the project. Creating a project
                can take a few seconds.</para>
            </listitem>
        </orderedlist>

        <para>
            A Roo Shell is automatically opened for a new Roo project. If closed, you can
            open a new Roo Shell by selecting
            <menuchoice><guimenu>Window</guimenu><guisubmenu>Show
            View</guisubmenu><guimenuitem>Roo Shell</guimenuitem></menuchoice>.
        </para>

    </section>

    <section xml:id="rapid.environment.rooplugin">
        <title>Installing Vaadin Plugin for Spring Roo</title>

        <para>
            The Vaadin Plugin for Spring Roo is installed in the Roo Shell. While the
            plugin installation is not project specific and it will work in all projects
            once installed, a Roo Shell can only be opened for an existing project.
        </para>

        <orderedlist>
            <listitem>
                <para>
                    If the Roo Shell is not already open, right-click the project folder
                    in the <guilabel>Package Explorer</guilabel> and select
                    <menuchoice><guimenu>Spring Tools</guimenu><guimenuitem>Open Roo
                    Shell</guimenuitem></menuchoice>.
                </para>
            </listitem>

            <listitem>
                <para>
                    In the Roo Shell view enter:
                </para>

                <screen><?pocket-size 70% ?><prompt>roo&gt;</prompt> <command>pgp trust</command> <parameter>--keyId</parameter> 0xBF0451C0
<prompt>roo&gt;</prompt> <command>download</command> accept terms of use
<prompt>roo&gt;</prompt> <command>addon install bundle</command> <parameter>--bundleSymbolicName</parameter>
     com.vaadin.spring.roo.addon</screen>
            </listitem>
        </orderedlist>
    </section>

    <section xml:id="rapid.environment.datalayer">
        <title>Setting up the Roo Data Layer</title>

        <para>
            Binding application data model to a database with Java Persistence API (JPA)
            is amazingly easy with Roo. You simply need to set up persistence as follows:
        </para>

        <screen><?pocket-size 75% ?><prompt>roo&gt;</prompt> <command>persistence setup</command> <parameter>--provider</parameter> ECLIPSELINK
                       <parameter>--database</parameter> HYPERSONIC_IN_MEMORY</screen>

        <para>
            The above example sets up persistence using the EclipseLink JPA layer and an
            in-memory HSQLDB database. Hitting
            <keycombo><keycap>Ctrl</keycap><keycap>Space</keycap></keycombo> completion
            shows the possible values for the <parameter>--provider</parameter> and
            <parameter>--database</parameter> parameters.
        </para>

        <para>
            When using a real database, you need to configure the database connection in
            <filename>src/main/resources/META-INF/spring/database.properties</filename>.
        </para>
    </section>
</section>
	
<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:nil
sgml-shorttag:nil
sgml-namecase-general:nil
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:4
sgml-indent-data:t
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:("/etc/sgml/catalog" "/usr/share/xemacs21/xemacs-packages/etc/psgml-dtds/CATALOG")
sgml-local-ecat-files:("ECAT" "~/sgml/ECAT" "/usr/share/sgml/ECAT" "/usr/local/share/sgml/ECAT" "/usr/local/lib/sgml/ECAT")
End:
-->
