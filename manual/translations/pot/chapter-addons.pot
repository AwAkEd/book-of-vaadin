# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2012-04-02 14:31+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: chapter-addons.xml:4
#, no-c-format
msgid "Using Vaadin Add-ons"
msgstr ""

#. Tag: para
#: chapter-addons.xml:6
#, no-c-format
msgid "This chapter describes the installation of add-on components, themes, containers, and other tools from the Vaadin Directory and the use of commercial add-ons offered by Vaadin."
msgstr ""

#. Tag: title
#: chapter-addons.xml:13
#, no-c-format
msgid "Overview"
msgstr ""

#. Tag: para
#: chapter-addons.xml:15
#, no-c-format
msgid "In addition to the components, layouts, themes, and data sources built in into the core Vaadin library, many others are available as add-ons, either from the Vaadin Directory or from independent sources. Both commercial and free components exist under various licenses."
msgstr ""

#. Tag: para
#: chapter-addons.xml:22
#, no-c-format
msgid "Installation of themes, data sources, and components built with server-side component composition is simple, just dropping a JAR package in a project and, usually, compiling the included widget set (the client-side implementation)."
msgstr ""

#. Tag: title
#: chapter-addons.xml:31
#, no-c-format
msgid "Downloading Add-ons from Vaadin Directory"
msgstr ""

#. Tag: para
#: chapter-addons.xml:33
#, no-c-format
msgid "Vaadin Directory at <uri>http://vaadin.com/directory/</uri> provides a rich collection of add-ons for Vaadin. You can download Directory add-on packages from the details page of an add-on."
msgstr ""

#. Tag: para
#: chapter-addons.xml:41
#, no-c-format
msgid "Select the version; some add-ons have several versions available. The latest is shown by default, but you can choose another the version to download from the dropdown menu in the header of the details page."
msgstr ""

#. Tag: para
#: chapter-addons.xml:49
#, no-c-format
msgid "Click <guibutton>Download Now</guibutton> and save the JAR or Zip file on your computer."
msgstr ""

#. Tag: para
#: chapter-addons.xml:55
#, no-c-format
msgid "If the add-on is packaged in a Zip package, unzip the package and follow any instructions provided inside the package. Typically, you just need to copy a JAR file to your web project under the <filename>WEB-INF/lib</filename> directory."
msgstr ""

#. Tag: para
#: chapter-addons.xml:64
#, no-c-format
msgid "Update and recompile your project. In Eclipse, select the project and press F5."
msgstr ""

#. Tag: para
#: chapter-addons.xml:71
#, no-c-format
msgid "You need to compile the client-side implementations of the add-on components, that is, a <emphasis>widget set</emphasis>. This is the case for majority of add-ons, except for pure server-side, theme, or data binding add-ons. You must recompile the widget set if you install a new version of the add-on or the Vaadin library. See the subsequent sections for detailed instructions for compiling widget sets."
msgstr ""

#. Tag: para
#: chapter-addons.xml:83
#, no-c-format
msgid "Update the project in web server and possibly restart the server."
msgstr ""

#. Tag: para
#: chapter-addons.xml:89
#, no-c-format
msgid "After trying out an add-on, you can give some feedback to the author of the add-on by rating the add-on with one to five stars and optionally leaving a comment."
msgstr ""

#. Tag: para
#: chapter-addons.xml:95
#, no-c-format
msgid "Please note the add-on license. While most commercial add-ons can be downloaded directly, you should note their license and other terms and conditions. Many are offered under a dual licensing agreement so that they can be used in open source projects for free, and many have a trial period for closed-source development."
msgstr ""

#. Tag: title
#: chapter-addons.xml:105
#, no-c-format
msgid "Compiling Add-on Widget Sets"
msgstr ""

#. Tag: title
#: chapter-addons.xml:108
#, no-c-format
msgid "Compiling Widget Sets in Eclipse"
msgstr ""

#. Tag: para
#: chapter-addons.xml:110
#, no-c-format
msgid "To be able to compile widget sets in Eclipse, you need to have the Vaadin Plugin for Eclipse installed, as instructed in <xref linkend=\"getting-started.environment.eclipse-plugin\"/>."
msgstr ""

#. Tag: para
#: chapter-addons.xml:116
#, no-c-format
msgid "An application can only have one widget set, so if you use multiple add-ons and possibly your own custom widgets, they need to be combined to a single widget set that inherits them. You can create the combining widget set manually and the Eclipse plugin simply update it when you add new add-ons. Otherwise, the Eclipse plugin automatically creates a project-specific widget set under the project root source folder."
msgstr ""

#. Tag: para
#: chapter-addons.xml:125
#, no-c-format
msgid "The Eclipse plugin compiles widget sets automatically by default. They do not normally need to be recompiled after changes to server-side classes, so if the automatic recompilation get annoying, disable it from the project settings."
msgstr ""

#. Tag: para
#: chapter-addons.xml:132
#, no-c-format
msgid "To compile the widget set(s) manually, click the <guilabel>Compile Vaadin widgets</guilabel> button in Eclipse toolbar or press <keycombo><keycap>Ctrl</keycap><keycap>6</keycap></keycombo>. You must recompile the widget set(s) always when you install a new version of the add-on or of the Vaadin library."
msgstr ""

#. Tag: title
#: chapter-addons.xml:142
#, no-c-format
msgid "The <guibutton>Compile Vaadin widgets</guibutton> Button in Eclipse Toolbar"
msgstr ""

#. Tag: para
#: chapter-addons.xml:153
#, no-c-format
msgid "Further information on defining and compiling widget sets is given in <xref linkend=\"gwt.eclipse.compiling\"/>, <xref linkend=\"gwt.widgetset\"/>, and <xref linkend=\"gwt.development.compiler\"/>."
msgstr ""

#. Tag: title
#: chapter-addons.xml:161
#, no-c-format
msgid "Compiling Widget Sets with an Ant Script"
msgstr ""

#. Tag: para
#: chapter-addons.xml:163
#, no-c-format
msgid "If you need to compile the widget set with an Ant script, you can find a script template at the URL <link xlink:href=\"https://vaadin.com/download/misc/build-widgetset.xml\">https://vaadin.com/download/misc/build-widgetset.xml</link>. You can copy the build script to your project and, once configured, use it by entering:"
msgstr ""

#. Tag: screen
#: chapter-addons.xml:171
#, no-c-format
msgid "<prompt>$</prompt> <command>ant -f build-widgetset.xml</command>"
msgstr ""

#. Tag: para
#: chapter-addons.xml:173
#, no-c-format
msgid "See <xref linkend=\"gwt.development.compiler\"/> for details on configuring the build script and the available build targets, and <xref linkend=\"gwt.widgetset\"/> for information regarding the widget set definition file."
msgstr ""

#. Tag: para
#: chapter-addons.xml:180
#, no-c-format
msgid "If you are using an IDE such as Eclipse, <emphasis>always</emphasis> remember to refresh the project to synchronize it with the filesystem after compiling the widget set outside Eclipse."
msgstr ""

#. Tag: title
#: chapter-addons.xml:188
#, no-c-format
msgid "Troubleshooting"
msgstr ""

#. Tag: para
#: chapter-addons.xml:190
#, no-c-format
msgid "If you experience problems, do the following:"
msgstr ""

#. Tag: para
#: chapter-addons.xml:196
#, no-c-format
msgid "Check the <filename>.gwt.xml</filename> widget set definition file under the widget set folder in the project root package. For example, if the project root package is <filename>com.example.myproject</filename>, the widget set definition file would be <filename>com.example.myproject.widgetset.MyprojectWidgetset.gwt.xml</filename>. See <xref linkend=\"gwt.widgetset\"/> for details on the contents of the widget set definition file."
msgstr ""

#. Tag: para
#: chapter-addons.xml:209
#, no-c-format
msgid "Check the <filename>WEB-INF/web.xml</filename> deployment descriptor and see that the servlet for your application has a widget set parameter, such as the following:"
msgstr ""

#. Tag: programlisting
#: chapter-addons.xml:215
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[<init-param>\n"
"  <description>Application widgetset</description>\n"
"  <param-name>widgetset</param-name>\n"
"  <param-value>com.example.myproject.widgetset.MyprojectWidgetset</param-value>\n"
"</init-param>]]>"
msgstr ""

#. Tag: para
#: chapter-addons.xml:219
#, no-c-format
msgid "See the <filename>VAADIN/widgetsets</filename> directory and check that the widget set appears there. You can remove it and recompile to see that compilation works properly."
msgstr ""

#. Tag: para
#: chapter-addons.xml:226
#, no-c-format
msgid "Use the <guilabel>Net</guilabel> tab in Firebug to see that the widget set (and theme) is loaded properly."
msgstr ""

#. Tag: para
#: chapter-addons.xml:232
#, no-c-format
msgid "Use the <uri>?debug</uri> parameter for the application to see if there is any version conflict between the widget set and the Vaadin library, or the themes. See <xref linkend=\"advanced.debug-production-modes.debug.mode\"/> for details."
msgstr ""

#. Tag: para
#: chapter-addons.xml:241
#, no-c-format
msgid "Refresh and recompile the project. In Eclipse, select the project and press <keycap>F5</keycap>, stop the server, clean the server temporary directories, and restart it."
msgstr ""

#. Tag: para
#: chapter-addons.xml:248
#, no-c-format
msgid "Check the Error Log view in Eclipse (or the IDE you use)."
msgstr ""

#. Tag: para
#: chapter-addons.xml:254
#, no-c-format
msgid "For more specific problems related to widget sets definition and compilation, see <xref linkend=\"gwt.development.troubleshooting\"/>."
msgstr ""

#. Tag: title
#: chapter-addons.xml:262
#, no-c-format
msgid "Removing Add-ons"
msgstr ""

#. Tag: para
#: chapter-addons.xml:264
#, no-c-format
msgid "Version mismatch problems with custom widget sets are a common source of grief for many beginners in Vaadin. If you need add-ons or your own custom components that include widget sets, you of course need to compile them, but otherwise it is unnecessary."
msgstr ""

#. Tag: para
#: chapter-addons.xml:271
#, no-c-format
msgid "If you do not use any such add-ons or your own custom components, do the following:"
msgstr ""

#. Tag: para
#: chapter-addons.xml:278
#, no-c-format
msgid "If you are using the Eclipse plugin, disable automatic widget set compilation from project preferences, in the <guilabel>Vaadin</guilabel> category, by selecting <guilabel>Suspend automatic widgetset builds</guilabel>. This prevents accidental compilation of the unnecessary widget sets. You may want to do this anyhow as the automatic builds can be annoying. You can still always build the widget set with the button in the toolbar."
msgstr ""

#. Tag: para
#: chapter-addons.xml:289
#, no-c-format
msgid "Remove all widget set folders from under the <filename>VAADIN/widgetsets</filename> folder."
msgstr ""

#. Tag: para
#: chapter-addons.xml:295
#, no-c-format
msgid "Edit the <filename>WEB-INF/web.xml</filename> file and remove the <parameter>widgetset</parameter> init parameter from the servlet. It looks as follows:"
msgstr ""

#. Tag: programlisting
#: chapter-addons.xml:301
#, no-c-format
msgid ""
"<?pocket-size 65% ?><![CDATA[<init-param>\n"
"  <description>Application widgetset</description>\n"
"  <param-name>widgetset</param-name>\n"
"  <param-value>com.vaadin.demo.colorpicker.widgetset.ColorPickerWidgetSet</param-value>\n"
"</init-param>]]>"
msgstr ""

#. Tag: para
#: chapter-addons.xml:305
#, no-c-format
msgid "Refresh the project. In Eclipse, select the project and press F5, stop the server, clean the server temporary directories, and restart it."
msgstr ""

#. Tag: para
#: chapter-addons.xml:312
#, no-c-format
msgid "At least in development environments, if you have extracted Vaadin themes to the <filename>VAADIN/themes</filename> folder, you should remove them and let them be loaded dynamically from the Vaadin JAR."
msgstr ""

#. Tag: title
#: chapter-addons.xml:320
#, no-c-format
msgid "Using Add-ons in a Maven Project"
msgstr ""

#. Tag: primary
#: chapter-addons.xml:323
#, no-c-format
msgid "Maven"
msgstr ""

#. Tag: secondary
#: chapter-addons.xml:324
#, no-c-format
msgid "using add-ons"
msgstr ""

#. Tag: para
#: chapter-addons.xml:327
#, no-c-format
msgid "To use add-ons in a project that uses Maven, you simply have to add them as dependencies in the POM. If the add-ons includes widget sets, as at least most component add-ons do, you also need to define and compile a project widget set."
msgstr ""

#. Tag: para
#: chapter-addons.xml:334
#, no-c-format
msgid "Creating, compiling, and packaging a Vaadin project using Maven was described in <xref linkend=\"getting-started.maven\"/>."
msgstr ""

#. Tag: title
#: chapter-addons.xml:340
#, no-c-format
msgid "Adding a Dependency"
msgstr ""

#. Tag: para
#: chapter-addons.xml:342
#, no-c-format
msgid "Vaadin Directory provides a Maven repository for all the add-ons in the Directory. You can view needed Maven dependency definitions by clicking the <guibutton>Maven POM</guibutton> button at the right side of the add-on view, as illustrated in <xref linkend=\"figure.addons.maven.pombutton\"/>."
msgstr ""

#. Tag: title
#: chapter-addons.xml:351
#, no-c-format
msgid "Maven POM Definitions in Vaadin Directory"
msgstr ""

#. Tag: para
#: chapter-addons.xml:362
#, no-c-format
msgid "You need to copy the dependency declaration to the <filename>pom.xml</filename> file in your project, under the <filename>/project/dependencies</filename> element."
msgstr ""

#. Tag: programlisting
#: chapter-addons.xml:368
#, no-c-format
msgid ""
"...\n"
"  &lt;dependencies&gt;\n"
"    &lt;dependency&gt;\n"
"      &lt;groupId&gt;com.vaadin&lt;/groupId&gt;\n"
"      &lt;artifactId&gt;vaadin&lt;/artifactId&gt;\n"
"      &lt;version&gt;${vaadin.version}&lt;/version&gt;\n"
"    &lt;/dependency&gt;\n"
"    &lt;dependency&gt;\n"
"      &lt;groupId&gt;org.vaadin.addons&lt;/groupId&gt;\n"
"      &lt;artifactId&gt;<emphasis role=\"bold\">vaadin-sqlcontainer</emphasis>&lt;/artifactId&gt;\n"
"      &lt;version&gt;<emphasis role=\"bold\">1.1.0</emphasis>&lt;/version&gt;\n"
"    &lt;/dependency&gt;\n"
"    ..."
msgstr ""

#. Tag: para
#: chapter-addons.xml:370
#, no-c-format
msgid "You can use the exact version number, as is done in the example above, or <literal>LATEST</literal> to always use the latest version of the add-on."
msgstr ""

#. Tag: para
#: chapter-addons.xml:375
#, no-c-format
msgid "The POM excerpt given in Directory includes also a repository definition, but if you have used the <literal>vaadin-archetype-clean</literal> archetype when creating your project, it should already include the definition."
msgstr ""

#. Tag: title
#: chapter-addons.xml:384
#, no-c-format
msgid "Enabling Widget Set Compilation"
msgstr ""

#. Tag: para
#: chapter-addons.xml:386
#, no-c-format
msgid "Most add-on components in Vaadin Directory include a <emphasis>widget set</emphasis> which must be compiled before using the add-on. Some add-ons, such as data binding add-ons or themes, do not include a widget set."
msgstr ""

#. Tag: title
#: chapter-addons.xml:394
#, no-c-format
msgid "Configuring the POM"
msgstr ""

#. Tag: para
#: chapter-addons.xml:396
#, no-c-format
msgid "The configuration needed for compiling widget sets is included in the <filename>pom.xml</filename> created with the <literal>vaadin-archetype-clean</literal> archetype, but the elements are commented out. You just need to enable the configuration."
msgstr ""

#. Tag: programlisting
#: chapter-addons.xml:403
#, no-c-format
msgid ""
"&lt;!-- Compile custom GWT components or widget dependencies with the GWT compiler --&gt;\n"
"<emphasis role=\"bold\">&lt;!--</emphasis>\n"
"&lt;plugin&gt;\n"
"  &lt;groupId&gt;org.codehaus.mojo&lt;/groupId&gt;\n"
"  ...\n"
"&lt;/plugin&gt;\n"
"<emphasis role=\"bold\">--&gt;</emphasis>\n"
"\n"
"...\n"
"\n"
"<emphasis role=\"bold\">&lt;!--</emphasis>\n"
"&lt;pluginRepositories&gt;\n"
"&lt;/pluginRepositories&gt;\n"
"<emphasis role=\"bold\">--&gt;</emphasis>\n"
"\n"
"...\n"
"\n"
"&lt;dependencies&gt;\n"
"...\n"
"  <emphasis role=\"bold\">&lt;!--</emphasis>\n"
"  &lt;dependency&gt;\n"
"    ...\n"
"  &lt;/dependency&gt;\n"
"  <emphasis role=\"bold\">--&gt;</emphasis>\n"
"&lt;/dependencies&gt;"
msgstr ""

#. Tag: title
#: chapter-addons.xml:407
#, no-c-format
msgid "Creating a Widget Set Definition File"
msgstr ""

#. Tag: primary
#: chapter-addons.xml:410
#, no-c-format
msgid "Google Web Toolkit"
msgstr ""

#. Tag: secondary
#: chapter-addons.xml:411
#, no-c-format
msgid "GWT Module Descriptor"
msgstr ""

#. Tag: para
#: chapter-addons.xml:414
#, no-c-format
msgid "Your project needs a widget set that combines the default widget set in the Vaadin core library with any widget sets from add-ons. This requires creating an empty <emphasis>widget set definition file</emphasis> (or <emphasis>module file</emphasis> in GWT terminology). The actual content of the file is generated automatically by searching the class path for widget sets (with the <literal>vaadin:update-widgetset</literal> as explained later), but you need to create an empty file."
msgstr ""

#. Tag: para
#: chapter-addons.xml:425
#, no-c-format
msgid "Create a widget set directory in your project source directory."
msgstr ""

#. Tag: screen
#: chapter-addons.xml:429
#, no-c-format
msgid "<prompt>$</prompt> <command>mkdir</command> <parameter>project-name/src/main/java/your/company/gwt</parameter>"
msgstr ""

#. Tag: para
#: chapter-addons.xml:431
#, no-c-format
msgid "Then create a <filename>ProjectNameWidgetSet.gwt.xml</filename> file in the directory with an empty <literal>&lt;module&gt;</literal> element as follows:"
msgstr ""

#. Tag: programlisting
#: chapter-addons.xml:437
#, no-c-format
msgid ""
"<![CDATA[<module>\n"
"</module>]]>"
msgstr ""

#. Tag: title
#: chapter-addons.xml:443
#, no-c-format
msgid "Enabling the Widget Set in the Application"
msgstr ""

#. Tag: para
#: chapter-addons.xml:445
#, no-c-format
msgid "The project widget set needs to be enabled in the <filename>web.xml</filename> deployment descriptor in the application. Edit the <filename>src/main/webapp/WEB-INF/web.xml</filename> file and add or modify the <literal>widgetset</literal> parameter for the servlet as follows."
msgstr ""

#. Tag: programlisting
#: chapter-addons.xml:453
#, no-c-format
msgid ""
"&lt;servlet&gt;\n"
"  ...\n"
"  &lt;init-param&gt;\n"
"    &lt;description&gt;Widget Set to Use&lt;/description&gt;\n"
"    &lt;param-name&gt;widgetset&lt;/param-name&gt;\n"
"    &lt;param-value&gt;<emphasis role=\"bold\">your.company.gwt.ProjectNameWidgetSet</emphasis>&lt;/param-value&gt;\n"
"  &lt;/init-param&gt;\n"
"&lt;/servlet&gt;"
msgstr ""

#. Tag: para
#: chapter-addons.xml:455
#, no-c-format
msgid "The parameter is the class name of the widget set, that is, without the <filename>.gwt.xml</filename> extension and with the Java dot notation for class names that include the package name."
msgstr ""

#. Tag: para
#: chapter-addons.xml:462
#, no-c-format
msgid "This should complete the task of enabling a widget set compilation and use in your project. Next, you need to update the project widget set, as described in the next section."
msgstr ""

#. Tag: title
#: chapter-addons.xml:470
#, no-c-format
msgid "Updating and Compiling the Project Widget Set"
msgstr ""

#. Tag: para
#: chapter-addons.xml:472
#, no-c-format
msgid "If you have enabled widget set compilation as described earlier and created the project widget set, you need to update the widget set to include the default widget set and any widget sets included in add-ons. You can do this simply by running the <literal>vaadin:update-widgetset</literal> goal in the project directory."
msgstr ""

#. Tag: screen
#: chapter-addons.xml:480
#, no-c-format
msgid ""
"<prompt>$</prompt> <command>mvn</command> <parameter>vaadin:update-widgetset</parameter>\n"
"...\n"
"[INFO] auto discovered modules [your.company.gwt.ProjectNameWidgetSet]\n"
"[INFO] Updating widgetset your.company.gwt.ProjectNameWidgetSet\n"
"[ERROR] 27.10.2011 19:22:34 com.vaadin.terminal.gwt.widgetsetutils.ClassPathExplorer getAvailableWidgetSets\n"
"[ERROR] INFO: Widgetsets found from classpath:\n"
"[ERROR]         your.company.gwt.ProjectNameWidgetSet in file:/home/magi/itmill/maventest/project-name/src/main/java\n"
"[ERROR]         com.vaadin.terminal.gwt.DefaultWidgetSet in jar:file:/home/magi/.m2/repository/com/vaadin/vaadin/6.7.1/vaadin-6.7.1.jar!/\n"
"[ERROR] \n"
"[ERROR] 27.10.2011 19:22:34 com.vaadin.terminal.gwt.widgetsetutils.ClassPathExplorer getAvailableWidgetSets\n"
"[ERROR] INFO: Search took 8ms\n"
"..."
msgstr ""

#. Tag: para
#: chapter-addons.xml:482
#, no-c-format
msgid "Do not mind the \"ERROR\" labels, they are just an issue with the Vaadin Plugin for Maven."
msgstr ""

#. Tag: para
#: chapter-addons.xml:487
#, no-c-format
msgid "If you later add other add-ons in the project, or remove some, you need to run the widget set update again."
msgstr ""

#. Tag: para
#: chapter-addons.xml:492
#, no-c-format
msgid "The project widget set also needs to be compiled using the GWT Compiler. We enabled the Maven add-ons for GWT compilation in the previous section. You can compile the widget set with the <literal>gwt:compile</literal> goal as follows:"
msgstr ""

#. Tag: screen
#: chapter-addons.xml:499
#, no-c-format
msgid "<prompt>$</prompt> <command>mvn</command> <parameter>gwt:compile</parameter>"
msgstr ""

#. Tag: para
#: chapter-addons.xml:501
#, no-c-format
msgid "You need to recompile the widget set if you upgrade to a new version of Vaadin or any of the included widget sets. It is <emphasis>not</emphasis> done automatically by the <literal>package</literal> goal. If you have added or removed add-ons, you also need to run the <literal>vaadin:update-widgetset</literal> goal before the compilation."
msgstr ""

#. Tag: para
#: chapter-addons.xml:509
#, no-c-format
msgid "This concludes the compilation of add-on widget sets. You still need to compile and package the actual application with the <literal>package</literal> goal, as described in <xref linkend=\"getting-started.maven\"/>."
msgstr ""
