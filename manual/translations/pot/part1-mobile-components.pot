# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2011-11-03 16:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: part1-mobile-components.xml:4
#, no-c-format
msgid "Mobile User Interface Components"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:6
#, no-c-format
msgid "TouchKit introduces a number of components special to mobile device user interfaces."
msgstr ""

#. Tag: classname
#: part1-mobile-components.xml:12
#, no-c-format
msgid "NavigationView"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:14
#, no-c-format
msgid "The <classname>NavigationView</classname> is a layout component that consists of a navigation bar and a content area. The content area is scrollable, so there is no need to use an inner panel component. In addition, there can be an optional toolbar component at the bottom of the view. <classname>NavigationView</classname> is often used inside a <classname>NavigationManager</classname> to get view change animations."
msgstr ""

#. Tag: title
#: part1-mobile-components.xml:24
#, no-c-format
msgid "Layout of the <classname>NavigationView</classname>"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:35
#, no-c-format
msgid "<classname>NavigationView</classname> has a full size by default. The content area is expanding, so that it takes all the space left over from the navigation bar and toolbar."
msgstr ""

#. Tag: title
#: part1-mobile-components.xml:42
#, no-c-format
msgid "Navigation Bar"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:44
#, no-c-format
msgid "The navigation bar at the top of <classname>NavigationView</classname> is a <classname>NavigationBar</classname> component. It has two component slots, with one on the left and one on the right. On the middle, there is a caption. You can use the <classname>NavigationBar</classname> elsewhere as well, such as for the toolbar."
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:52
#, no-c-format
msgid "The left slot is automatically filled with a <guibutton>Back</guibutton> button if you set the previous component with <methodname>setPreviousComponent()</methodname>. If you use the <classname>NavigationView</classname> inside a <classname>NavigationManager</classname>, the manager automaticaly sets the previous view when you navigate to it from another managed view."
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:61
#, no-c-format
msgid "You can get access to the navigation bar component with <methodname>getNavigationBar()</methodname> to use its manipulator methods directly, but <classname>NavigationView</classname> also offers some shorthand methods: <methodname>setLeftComponent()</methodname>, <methodname>setRightComponent()</methodname>, and a setter and a getter for the caption."
msgstr ""

#. Tag: title
#: part1-mobile-components.xml:72
#, no-c-format
msgid "<title>Toolbar</title>"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:74
#, no-c-format
msgid "A slot for an optional toolbar is located at the bottom of the <classname>NavigationView</classname>. The toolbar can be any component, but a <classname>Toolbar</classname> component made for this purpose is included in TouchKit. It is described in <xref linkend=\"mobile.components.toolbar\"/>. You could also use a <classname>HorizontalLayout</classname> or <classname>CssLayout</classname>."
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:84
#, no-c-format
msgid "You usually fill the tool bar with <classname>Button</classname> components with an icon and no textual caption. You set the toolbar with <methodname>setToolbar()</methodname>."
msgstr ""

#. Tag: title
#: part1-mobile-components.xml:92 part1-mobile-components.xml:135 part1-mobile-components.xml:253 part1-mobile-components.xml:325 part1-mobile-components.xml:350 part1-mobile-components.xml:375
#, no-c-format
msgid "Styling with CSS"
msgstr ""

#. Tag: programlisting
#: part1-mobile-components.xml:94
#, no-c-format
msgid ""
      "<![CDATA[.v-touchkit-navview { }\n"
      "  .v-touchkit-navview-wrapper {}\n"
      "  .v-touchkit-navview-toolbar {}\n"
      ".v-touchkit-navview .v-touchkit-navview-notoolbar {}]]>"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:96
#, no-c-format
msgid "The root element has the <literal>v-touchkit-navview</literal> class. The content area is wrapped inside a <literal>v-touchkit-navview-wrapper</literal> element. If the view has a toolbar, the toolbar slot has the <literal>v-touchkit-navview-toolbar</literal> style, but if not, the top-level element has the <literal>v-touchkit-navview-notoolbar</literal> style."
msgstr ""

#. Tag: classname
#: part1-mobile-components.xml:117
#, no-c-format
msgid "<classname>Toolbar</classname>"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:119
#, no-c-format
msgid "The <classname>Toolbar</classname> is a layout component that extends <classname>CssLayout</classname>, usually containing <classname>Button</classname> components. The toolbar has by default 100% horizontal width and a fixed height. The components are spread evenly in the horizontal direction. <classname>Toolbar</classname> is typically used in a <classname>NavigationView</classname>, as described in <xref linkend=\"mobile.components.navigationview\" xrefstyle=\"select:label\"/>."
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:129
#, no-c-format
msgid "For a description of the inherited features, please refer to <xref linkend=\"layout.components.orderedlayout\"/>."
msgstr ""

#. Tag: programlisting
#: part1-mobile-components.xml:137
#, no-c-format
msgid "<![CDATA[.v-touchkit-toolbar { }]]>"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:139
#, no-c-format
msgid "The component has an overall <literal>v-touchkit-toolbar</literal> style in addition to the <literal>v-csslayout</literal> style of the superclass. Other style names are as for <classname>CssLayout</classname>."
msgstr ""

#. Tag: classname
#: part1-mobile-components.xml:149
#, no-c-format
msgid "NavigationManager"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:151
#, no-c-format
msgid "The <classname>NavigationManager</classname> is a visual effect component that gives sliding animation when switching between views. You can register three components: the currently displayed component, the previous one on the left, and the next component on the right. You can set these components with <methodname>setCurrentComponent()</methodname>, <methodname>setPreviousComponent()</methodname>, and <methodname>setNextComponent()</methodname>, respectively."
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:161
#, no-c-format
msgid "The <classname>NavigationManager</classname> component is illustrated in <xref linkend=\"figure:mobile.components.navigationpanel\"/>."
msgstr ""

#. Tag: title
#: part1-mobile-components.xml:167
#, no-c-format
msgid "<classname>NavigationManager</classname> with Three <classname>NavigationView</classname>s"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:178
#, no-c-format
msgid "The navigation manager is important for responsiveness, because the previous and next components are cached and the slide animation started before server is contacted to load the new next or previous views."
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:184
#, no-c-format
msgid "Switching between the views is done programmatically according to user interaction; swipe gestures are not supported at the moment."
msgstr ""

#. Tag: title
#: part1-mobile-components.xml:190
#, no-c-format
msgid "Handling View Changes"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:192
#, no-c-format
msgid "While you can put any components in the manager, some special features are enabled when using the <classname>NavigationView</classname>. When a view becomes visible, the <methodname>onBecomingVisible()</methodname> method in the view is called. You can override it, just remember to call the superclass method."
msgstr ""

#. Tag: programlisting
#: part1-mobile-components.xml:200
#, no-c-format
msgid ""
      "<![CDATA[@Override\n"
      "protected void onBecomingVisible() {\n"
      "    super.onBecomingVisible();\n"
      "\n"
      "    ...\n"
      "}]]>"
msgstr ""

#. Tag: title
#: part1-mobile-components.xml:204
#, no-c-format
msgid "Tracking Breadcrumbs"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:206
#, no-c-format
msgid "<classname>NavigationManager</classname> also handles <emphasis>breadcrumb</emphasis> tracking. The <methodname>navigateTo()</methodname> pushes the current view on the top of the breadcrumb stack and <methodname>navigateBack()</methodname> can be called to return to the previous breadcrumb level."
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:214
#, no-c-format
msgid "Notice that calling <methodname>navigateTo()</methodname> with the \"previous\" component is equivalent to calling <methodname>navigateBack()</methodname>."
msgstr ""

#. Tag: classname
#: part1-mobile-components.xml:223
#, no-c-format
msgid "NavigationButton"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:225
#, no-c-format
msgid "The <classname>NavigationButton</classname> is a special version of the regular <classname>Button</classname> designed for navigation inside a <classname>NavigationManager</classname>, as described in <xref linkend=\"mobile.components.navigationpanel\" xrefstyle=\"select:label\"/>. Clicking the button will automatically navigate to the defined target view. The view change animation does not need to make a server request first, but starts immediately after clicking the button. If you leave the target view empty, an empty placeholder view is shown in the animation. The view is filled after it gets the content from the server."
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:237
#, no-c-format
msgid "You can give the target view either in the constructor or with <methodname>setTargetView()</methodname>."
msgstr ""

#. Tag: programlisting
#: part1-mobile-components.xml:242
#, no-c-format
msgid ""
      "<?pocket-size 75% ?><![CDATA[\n"
      "NavigationView view = new NavigationView(\"A View\");\n"
      "...\n"
      "NavigationButton button = new NavigationButton(\"Click\");\n"
      "button.setTargetView(view);\n"
      "...]]>"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:244
#, no-c-format
msgid "Notice that the automatic navigation will only work if the button is inside a <classname>NavigationManager</classname> (in a view inside it). If you just want to use the button as a visual element, you can use it like a regular <classname>Button</classname> and handle the click events with a <classname>ClickListener</classname>."
msgstr ""

#. Tag: programlisting
#: part1-mobile-components.xml:255
#, no-c-format
msgid ""
      "<![CDATA[.v-touchkit-navbutton { }\n"
      "  .v-touchkit-navbutton-desc { }]]>"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:257
#, no-c-format
msgid "The component has an overall <literal>v-touchkit-navbutton</literal> style. If the component description is set with <methodname>setDescription()</methodname>, it is shown in a separate <literal>&lt;span&gt;</literal> element with the <literal>v-touchkit-navbutton-desc</literal> style."
msgstr ""

#. Tag: classname
#: part1-mobile-components.xml:268
#, no-c-format
msgid "Popover"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:270
#, no-c-format
msgid "<classname>Popover</classname> is much like a regular Vaadin sub-window, useful for quickly displaying some options or a small form related to an action. Unlike regular sub-windows, it does not support dragging or resizing by the user. It can have a caption, but usually does not. As sub-windows usually require a rather large screen size, the <classname>Popover</classname> is mainly applicable to tablet devices, but can be used also in phones with full size with <methodname>setSizeFull()</methodname>."
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:280
#, no-c-format
msgid "In the following, we extend <classname>Popover</classname> to use it. It is modal by default. Notice that the screen size is not available in the constructor, so we have to postpone using it to the <methodname>attach()</methodname> method."
msgstr ""

#. Tag: programlisting
#: part1-mobile-components.xml:287
#, no-c-format
msgid ""
      "<?pocket-size 65% ?><![CDATA[public class ComposeView extends Popover {\n"
      "    ...\n"
      "    public ComposeView(boolean smartphone) {\n"
      "        setClosable(false);\n"
      "\n"
      "        ...\n"
      "\n"
      "        // In phones use all space, in tablets just vertically\n"
      "        if (smartphone) {\n"
      "            setSizeFull();\n"
      "        } else {\n"
      "            setHeight(\"100%\");\n"
      "            center();\n"
      "        }\n"
      "    }\n"
      "\n"
      "    @Override\n"
      "    public void attach() {\n"
      "        super.attach();\n"
      "\n"
      "        // If tablet is wide, leave some space horizontally\n"
      "        if (!smartphone) {\n"
      "            if (getParent().getWidth() > 800) {\n"
      "                setWidth(\"80%\");\n"
      "            } else {\n"
      "                setWidth(\"100%\");\n"
      "            }\n"
      "        }\n"
      "    }\n"
      "    ...\n"
      "}]]>"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:289
#, no-c-format
msgid "You add popover windows to an application-level <classname>Window</classname> object with <methodname>addWindow()</methodname>, just like sub-windows in a regular Vaadin application."
msgstr ""

#. Tag: programlisting
#: part1-mobile-components.xml:295
#, no-c-format
msgid ""
      "<?pocket-size 65% ?><![CDATA[if (event.getButton() == emailButton) {\n"
      "    ComposeView composeView = new ComposeView(smartphone);\n"
      "    getWindow().addWindow(composeView);\n"
      "    return;\n"
      "}]]>"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:297
#, no-c-format
msgid "The resulting user interface in a tablet device is shown in <xref linkend=\"figure:mobile.components.popover\"/>."
msgstr ""

#. Tag: title
#: part1-mobile-components.xml:303
#, no-c-format
msgid "<classname>Popover</classname> in a Tablet Device"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:311
#, no-c-format
msgid "Alternatively, you can call the <methodname>showRelativeTo()</methodname>, which displays the sub-window relative to an existing component in the user interface."
msgstr ""

#. Tag: programlisting
#: part1-mobile-components.xml:317
#, no-c-format
msgid ""
      "<?pocket-size 65% ?><![CDATA[Popover popover = new Popover();\n"
      "popover.setContent(mailboxHierarchyView);\n"
      "popover.setClosable(true);\n"
      "popover.showRelativeTo(showMailboxHierarchyButton);\n"
      "popover.setHeight(getParent().getHeight() - 100, UNITS_PIXELS);]]>"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:319
#, no-c-format
msgid "In this case, you should not call <methodname>addWindow()</methodname> explicitly."
msgstr ""

#. Tag: programlisting
#: part1-mobile-components.xml:327
#, no-c-format
msgid ""
      "<![CDATA[.v-touchkit-popover .v-touchkit-fullscreen { }\n"
      "  .v-touchkit-popover .v-touchkit-relative { }\n"
      "  .v-touchkit-popover .v-touchkit-plain { }]]>"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:329
#, no-c-format
msgid "The component has an overall <literal>v-touchkit-popover</literal> style. If full-screen, it also has the <literal>v-touchkit-fullscreen</literal> style, if positioned relatively it has <literal>v-touchkit-relative</literal>, and if not, the <literal>v-touchkit-plain</literal> style."
msgstr ""

#. Tag: classname
#: part1-mobile-components.xml:339
#, no-c-format
msgid "Switch"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:341
#, no-c-format
msgid "The <classname>Switch</classname> component is a <classname>CheckBox</classname> that looks like the switch button in Apple iOS."
msgstr ""

#. Tag: programlisting
#: part1-mobile-components.xml:347
#, no-c-format
msgid ""
      "<![CDATA[Switch switch = new Switch();\n"
      "switch.setCaption(\"Do I look like iOS?\");\n"
      "layout.addComponent(switch);]]>"
msgstr ""

#. Tag: programlisting
#: part1-mobile-components.xml:352
#, no-c-format
msgid ""
      "<![CDATA[.v-touchkit-switch { }\n"
      "  .v-touchkit-switch-slider { }]]>"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:354
#, no-c-format
msgid "The component has an overall <literal>v-touchkit-switch</literal> style. The slider element has <literal>v-touchkit-switch-slider</literal> style."
msgstr ""

#. Tag: classname
#: part1-mobile-components.xml:362
#, no-c-format
msgid "ComponentGroup"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:364
#, no-c-format
msgid "The <classname>ComponentGroup</classname> is a layout component for grouping components. It uses margins, background color, and rounded corners to visualize the grouping. It extends <classname>CssLayout</classname> and behaves otherwise as such, except in having 100% default width. There is a vertical and a horizontal version of the component."
msgstr ""

#. Tag: programlisting
#: part1-mobile-components.xml:372
#, no-c-format
msgid ""
      "<![CDATA[VerticalComponentGroup componentGroup = new VerticalComponentGroup();\n"
      "\n"
      "// Name field\n"
      "Component textField = new TextField(\"Name\");\n"
      "textField.setWidth(\"100%\");\n"
      "componentGroup.addComponent(textField);\n"
      "\n"
      "// Email field\n"
      "EmailField emailField = new EmailField(\"Email\");\n"
      "emailField.setWidth(\"100%\");\n"
      "componentGroup.addComponent(emailField);\n"
      "\n"
      "// Number field\n"
      "NumberField numberField = new NumberField(\"Age\");\n"
      "numberField.setWidth(\"100%\");\n"
      "componentGroup.addComponent(numberField);]]>"
msgstr ""

#. Tag: programlisting
#: part1-mobile-components.xml:377
#, no-c-format
msgid ""
      "<![CDATA[.v-touchkit-componentgroup { }\n"
      ".v-touchkit-componentgroup-h { }]]>"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:379
#, no-c-format
msgid "The component has an overall <literal>v-touchkit-componentgroup</literal> style if vertical and <literal>v-touchkit-componentgroup-h</literal> if horizontal. If the component has a caption, the <literal>v-touchkit-has-caption</literal> style is added."
msgstr ""

#. Tag: classname
#: part1-mobile-components.xml:389
#, no-c-format
msgid "EmailField"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:391
#, no-c-format
msgid "The <classname>EmailField</classname> is just like the regular <classname>TextField</classname>, except that it has automatic capitalization and correction turned off. Mobile devices also recognize the field as an email field and can offer a virtual keyboard for the purpose, so that it includes the at (<literal>@</literal>) and period (<literal>.</literal>) characters, and possibly a shorthand for <literal>.com</literal>."
msgstr ""

#. Tag: classname
#: part1-mobile-components.xml:402
#, no-c-format
msgid "NumberField"
msgstr ""

#. Tag: para
#: part1-mobile-components.xml:404
#, no-c-format
msgid "The <classname>NumberField</classname> is just like the regular <classname>TextField</classname>, except that it is marked as a numeric input field for mobile devices, so that they will show a numeric virtual keyboard rather than the default alphanumeric."
msgstr ""

