<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="rapid.cloudfoundry">
    <title>Deploying to Cloud Foundry</title>

    <para>
        Cloud Foundry (<literal>http://cloudfoundry.com/</literal>) is a new
        platform-as-a-service solution from SpringSource. Cloud Foundry makes it extremely
        easy to deploy applications created with Spring Roo and Vaadin to the cloud.
    </para>
    
    <para>
        Before you can deploy to Cloud Foundry, you must register an account at
        <literal>http://cloudfoundry.com/</literal>. The activation might take some time,
        so you should do this several days before you need it.
    </para>
    
    <section xml:id="rapid.cloudfoundry.plugin">
        <title>Installing the Cloud Foundry Plug-in in STS</title>
        <para>
            Installing the Cloud Foundry plug-in is easy. Open the STS Dashboard and
            select the <guilabel>Extensions</guilabel> tab in the lower-left corner of the
            dashboard view. Scroll down to the <guilabel>Server and Clouds</guilabel>
            section and choose the <guilabel>Cloud Foundry integration plug-in</guilabel>
            from there. Click <guibutton>Install</guibutton> and follow the on-screen
            instructions.
        </para>
    </section>
    
    <section xml:id="rapid.cloudfoundry.deploy">
        <title>Deploying the Application</title>
        <para>
            Deploying the application is also very simple.
        </para>

        <orderedlist>
            <listitem>
                <para>
                    Open the <guilabel>Servers</guilabel> view, right-click somewhere in
                    it, and create a
                    <menuchoice><guimenu>New</guimenu><guimenuitem>Server</guimenuitem></menuchoice>.
                </para>
            </listitem>
            <listitem>
                <para>
                    In the <guilabel>New Server</guilabel> window, choose
                    <menuchoice><guimenu>VMWare</guimenu><guimenuitem>Cloud
                    Foundry</guimenuitem></menuchoice> and click
                    <guibutton>Next</guibutton>.
                </para>
            </listitem>
            <listitem>
                <para>
                    Fill in the account information that you received by email from
                    cloudfoundry.com and choose <guilabel>VMware Cloud Foundry -
                    http://api.cloudfoundry.com</guilabel> from the URL dropdown.
                </para>
            </listitem>
            <listitem>
                <para>
                    You can click 'Validate Account' to make sure that you filled in your
                    password correctly.
                </para>
            </listitem>
            <listitem>
                <para>
                    Click 'Finish' to finish the installation of the Cloud Foundry server.
                </para>
            </listitem>
        </orderedlist>
        
        <para>
            Once the new server is installed, you can add your project to it, just like
            you would add your project to any other server using the
            <guilabel>Servers</guilabel> view. Once added, right-click on the project and
            choose <guibutton>Start</guibutton>. This will ask for a name that identifies
            your project in the cloud as well as the URL to deploy to. After giving this
            information, the project will be uploaded and started in the cloud. After a
            few seconds, you should be able to visit the URL you provided and see your
            project in action.
        </para>
    </section>
    
    <section xml:id="rapid.cloudfoundry.mysql">
        <title>Binding to the MySQL Service</title>

        <para>
            The final part of our demonstration is to bind the application deployed in the
            Cloud Foundry to a real DBMS. In the following, we describe how you can bind
            the application to a MySQL database.
        </para>

        <orderedlist>
            <listitem>
                <para>
                    Bind a MySQL database to the application in Eclipse. In the
                    <guilabel>Cloud Foundry</guilabel> view:
                </para>
            </listitem>

            <orderedlist>
                <listitem>
                    <para>
                        Double-click the application deployed in Cloud Foundry
                    </para>
                </listitem>

                <listitem>
                    <para>
                        Select <guilabel>Services</guilabel> and click <guibutton>Add</guibutton>
                        in the upper-right corner
                    </para>
                </listitem>
                
                <listitem>
                    <para>
                        Give the connection a name and choose a MySQL database
                    </para>
                </listitem>

                <listitem>
                    <para>
                        Drag the created service from the <guilabel>Services</guilabel> panel
                        to the <guilabel>Services</guilabel> table in the application

                        <!-- TODO: Is this correct? Sounds suspicious. Verify. -->
                    </para>
                </listitem>
            </orderedlist>

            <listitem>
                <para>
                    Remove the dependency to the HSQLDB that we used at first from <filename>pom.xml</filename>
                </para>
            </listitem>

            <listitem>
                <para>
                    Add the MySQL connector dependency as follows:
                </para>

                <programlisting><?pocket-size 65% ?><![CDATA[<dependency>
  <groupId>mysql</groupId>
  <artifactId>mysql-connector-java</artifactId>
  <version>5.1.15</version>
</dependency>]]></programlisting>
            </listitem>

            <listitem>
                <para>
                    Add the Cloud Foundry runtime dependency as follows:
                </para>

                <programlisting><?pocket-size 65% ?><![CDATA[<dependency>
  <groupId>org.cloudfoundry</groupId>
  <artifactId>cloudfoundry-runtime</artifactId>
  <version>0.6.1</version>
</dependency>]]></programlisting>
            </listitem>

            <listitem>
                <para>
                    Edit the <filename>persistence.xml</filename> file and change the
                    <classname>org.eclipse.persistence.platform.database.HSQLPlatform</classname>
                    class name to
                    <classname>org.eclipse.persistence.platform.database.MySQLPlatform</classname>.
                </para>
            </listitem>

            <listitem>
                <para>
                    Edit the <filename>applicationContext.xml</filename> file and change the following line:
                </para>

                <programlisting><?pocket-size 65% ?><![CDATA[<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop= ...]]></programlisting>

                <para>
                    to the following:
                </para>

                <programlisting><?pocket-size 65% ?><![CDATA[<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:jee="http://www.springframework.org/schema/jee"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:cloud="http://schema.cloudfoundry.org/spring"
  xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://schema.cloudfoundry.org/spring http://schema.cloudfoundry.org/spring/cloudfoundry-spring.xsd">]]></programlisting>
            </listitem>

            <listitem>
                <para>
                    Also in the <filename>applicationContext.xml</filename> replace the following:
                </para>

                <programlisting><?pocket-size 65% ?><![CDATA[<bean class="org.apache.commons.dbcp.BasicDataSource"
      destroy-method="close" id="dataSource">
  <property name="driverClassName"
            value="${database.driverClassName}"/>
  <property name="url" value="${database.url}"/>
  <property name="username" value="${database.username}"/>
  <property name="password" value="${database.password}"/>
</bean>]]></programlisting>

                <para>
                    with the following:
                </para>

                <programlisting><?pocket-size 65% ?><![CDATA[<cloud:data-source id="dataSource" />]]></programlisting>
            </listitem>
        </orderedlist>
    </section>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-omittag:nil
sgml-shorttag:nil
sgml-namecase-general:nil
sgml-general-insert-case:lower
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:4
sgml-indent-data:t
sgml-parent-document:nil
sgml-exposed-tags:nil
sgml-local-catalogs:("/etc/sgml/catalog" "/usr/share/xemacs21/xemacs-packages/etc/psgml-dtds/CATALOG")
sgml-local-ecat-files:("ECAT" "~/sgml/ECAT" "/usr/share/sgml/ECAT" "/usr/local/share/sgml/ECAT" "/usr/local/lib/sgml/ECAT")
End:
-->
