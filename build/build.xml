<?xml version="1.0"?>

<project name="IT Mill Toolkit Documentation" basedir="../" default="package-all">

	<target name="package-all" depends="clean-all, package-init, init, build, docs, internal-package-mac, internal-package-windows, internal-package-linux, internal-package-war" description="Build public packages for Windows, Linux and Mac platforms.">
	</target>

	<!-- Clean results - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<target name="clean-all" depends="">
		<property file="build/build.properties" />
		<delete dir="${result-path}" includes="**/*" followsymlinks="false" defaultexcludes="false" includeemptydirs="true" failonerror="false">
		</delete>
	</target>

    <!-- ================================================================== -->
	<!-- Initialization - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- ================================================================== -->

	<target name="init" depends="">

		<property file="build/build.properties" />
		<property file="build/VERSION.properties" />
		<property file="build/html-style.properties" />

        <echo>Toolkit package is: ${toolkit-package}</echo>

		<!-- Can run XEP only if license is available. -->
		<available file="build/lib/XEP/license.xml" property="xep.license.available" />

		<!-- Create result dir unless already exists -->
		<mkdir dir="${result-path}" />

		<echo>We are on ${platform} platform (${os.name} ${os.version}), using ${gwt-dir}/${platform}/${lib-gwt-dev}.</echo>

		<echo message="Prepared to build ${product-file} version ${version} packages" />

		<!-- Output directory -->
		<property name="output-dir" value="${result-path}/${product-file}-${version}" />
		<mkdir dir="${output-dir}" />

		<!-- Create Output Directory Hierarchy -->
		<mkdir dir="${output-dir}/WebContent" />
		<mkdir dir="${output-dir}/WebContent/doc" />
		<mkdir dir="${output-dir}/WebContent/doc/manual" />
		<mkdir dir="${output-dir}/WebContent/doc/api" />

	</target>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  Documentation 
   - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<target name="docs" depends="manual-pdf,manual-html">
	</target>


    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- Documentation: Add documentation including style files              -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<target name="package-docs">
		<copy todir="${output-dir}/WebContent/doc/manual/html-style">
			<fileset dir="doc/manual/html-style">
				<exclude name="**/.svn" />
				<exclude name="**/test.html" />
			</fileset>
		</copy>
		<copy todir="${output-dir}/WebContent/doc">
			<fileset dir="doc">
				<exclude name="**/.svn" />
				<include name="dtd/**/*.dtd" />
			</fileset>
		</copy>
	</target>

    <!-- ================================================================== -->
    <!-- Build Reference Manual.                                            -->
    <!-- ================================================================== -->

    <!-- Initialize properties especially for the Reference Manual. -->
	<target name="init-manual" depends="">
        <!-- Sets the current date as the publication date of the Manual. -->
        <tstamp>
            <format property="manual.pubdate" pattern="yyyy-MM-dd"/>
        </tstamp>

        <!-- Classpath for running the XSLT processor. -->
		<path id="docbook-xsl.classpath">
			<pathelement path="build/lib/fserializer.jar" />
			<pathelement path="build/lib/xalan.jar" />
			<pathelement path="build/lib/xercesImpl.jar" />
			<pathelement path="build/lib/xml-apis.jar" />
		</path>
	</target>

	<!-- Build PDF manual from sources or just copy it. -->
	<target name="manual-pdf" depends="init, init-manual, build-manual-pdf, copy-manual-pdf">
	</target>

	<!-- Just copy a prebuilt PDF manual. -->
	<target name="copy-manual-pdf" unless="xep.license.available">
		<echo>PDF Manual: No XEP license available, just copy a prebuilt PDF.</echo>
		<copy file="doc/manual/book.pdf" tofile="${output-dir}/WebContent/doc/manual.pdf" />
	</target>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- Build PDF manual with XEP FO processor                              -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<target name="build-manual-pdf" if="xep.license.available">
		<echo>PDF Manual: processing images (TBD)</echo>
		<!-- TBD -->
		<echo>PDF Manual: converting xml to fo</echo>

        <echo>Publication date is ${manual.pubdate}</echo>

		<java classname="org.apache.xalan.xslt.Process" failonerror="yes" fork="yes" maxmemory="512m">
			<arg value="-xsl" />
			<arg value="build/docbook/conf/custom-fo-docbook.xsl" />
			<arg value="-in" />
			<arg value="doc/manual/book.xml" />
			<arg value="-out" />
			<arg value="${result-path}/book.fo" />
			<arg value="-param" />
			<arg value="section.autolabel" />
			<arg value="1" />
			<arg value="-param" />
			<arg value="section.label.includes.component.label" />
			<arg value="1" />
			<arg value="-param" />
			<arg value="section.autolabel.max.depth" />
			<arg value="2" />
			<arg value="-param" />
			<arg value="draft.watermark.image" />
			<arg value="''" />
			<arg value="-param" />
			<arg value="draft.mode" />
			<arg value="'no'" />
			<arg value="-param" />
			<arg value="double.sided" />
			<arg value="1" />
			<arg value="-param" />
			<arg value="manual.pubdate" />
			<arg value="${manual.pubdate}" />
			<arg value="-param" />
			<arg value="manual.version" />
			<arg value="${version}" />
			<classpath refid="docbook-xsl.classpath" />
		</java>
		<echo>PDF Manual: converting fo to pdf</echo>
		<!-- Run XEP FO processor to convert FO to PDF -->
		<java classname="com.renderx.xep.XSLDriver" error="${result-path}/xep-error.log" failonerror="yes" fork="yes" maxmemory="512m" input="${result-path}/book.fo" output="${output-dir}/WebContent/doc/manual.pdf">
			<arg value="-Dcom.renderx.xep.CONFIG=build/lib/XEP/xep.xml" />
			<classpath>
				<pathelement location="build/lib/XEP/lib/tools.jar" />
				<pathelement location="build/lib/XEP/lib/xep.jar" />
				<pathelement location="build/lib/XEP/lib/saxon.jar" />
				<pathelement location="build/lib/XEP/lib/xt.jar" />
			</classpath>
		</java>
	</target>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- HTML Manual                                                         -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <!-- Common initialization tasks for a HTML manual.                                   -->
    <!-- Some properties must be defined in the more specific HTML manual initialization. -->
	<target name="init-manual-html-common" depends="preprocess-src">
        <!-- Create the manual output directory if it doesn't already exist. -->
        <mkdir dir="${manual.html.output.dir}"/>

        <property name="manual.html.xsl.template"  value="build/docbook/conf/custom-html-template.xsl"/>
        <property name="manual.html.xsl.processed" value="build/docbook/conf/custom-html-processed.xsl"/>

        <!-- Replace tags in the HTML stylesheet template. -->
		<delete file="${manual.html.xsl.processed}" />
		<copy file="${manual.html.xsl.template}" tofile="${manual.html.xsl.processed}">
			<filterchain>
				<replacetokens>
					<token key="BODYHEADER" value="${html.body.start1}${docbook.head.title}${html.body.start2}" />
					<token key="BODYFOOTER" value="${html.body.end}" />
				</replacetokens>
			</filterchain>
		</copy>
    </target>

	<target name="manual-html-build" depends="init-manual-html, init-manual-html-common">
		<java classname="org.apache.xalan.xslt.Process" failonerror="yes" fork="yes" maxmemory="512m">
			<arg value="-in" />
			<arg value="doc/manual/book.xml" />
			<arg value="-xsl" />
			<arg value="${manual.html.xsl}" />
            <!-- The output file will be empty for eclipse plugin. -->
			<arg value="-out" />
			<arg value="${manual.html.output.index}" />
			<arg value="-param" />
			<arg value="section.autolabel" />
			<arg value="1" />
			<arg value="-param" />
			<arg value="section.label.includes.component.label" />
			<arg value="1" />
			<arg value="-param" />
			<arg value="section.autolabel.max.depth" />
			<arg value="2" />
			<arg value="-param" />
			<arg value="use.extensions" />
			<arg value="1" />
			<arg value="-param" />
			<arg value="manual.pubdate" />
			<arg value="${manual.pubdate}" />
			<arg value="-param" />
			<arg value="manual.version" />
			<arg value="${version}" />
            <!-- This is needed only for the Eclipse Help plugin. -->
			<arg value="-param" />
			<arg value="eclipse.plugin.version" />
			<arg value="${eclipse.plugin.manual.version}" />
			<classpath refid="docbook-xsl.classpath" />
		</java>

		<delete file="${manual.html.xsl.processed}" />
		<copy todir="${output-dir}/WebContent/doc/eclipse/img">
			<fileset dir="doc/manual/img">
				<exclude name="**/.svn" />
			</fileset>
		</copy>
    </target>

    <!-- Configuration for building the regular HTML manual. -->
	<target name="init-manual-html" depends="init, init-manual">
        <property name="manual.html.xsl" value="build/docbook/conf/manual-html.xsl"/>
        <property name="manual.html.output.dir" value="${output-dir}/WebContent/doc/manual"/>
        <property name="manual.html.output.index" value="${manual.html.output.dir}/index.html"/>

        <property name="output-dir-manual" value="${output-dir}/WebContent/doc/manual" />

		<echo>Manual: HTML</echo>
		<echo>Published: ${manual.pubdate}</echo>
    </target>

	<target name="manual-html" depends="init, init-manual, init-manual-html, init-manual-html-common, manual-html-build">
	</target>

	<!-- ant contrib required for flow control (for loop, if, property override) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="build/lib/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<!-- java2html converter -->
	<taskdef name="java2html" classname="de.java2html.anttasks.Java2HtmlTask" classpath="build/lib/java2html.jar" />

	<target name="init-manual-eclipse" depends="">
        <!-- Timestamp in YYYYMMDDHHMM format for plugin version number. -->
        <tstamp>
            <format property="eclipse.plugin.manual.pubtime" pattern="yyyyMMddkkmm"/>
        </tstamp>

        <property name="eclipse.plugin.manual.version" value="${version}.v${eclipse.plugin.manual.pubtime}" />
		<echo>Manual: Eclipse Help Plugin (version ${eclipse.plugin.manual.version})</echo>

        <property name="manual.html.xsl" value="build/docbook/conf/manual-eclipse-plugin.xsl"/>
        <property name="manual.html.output.dir" value="${output-dir}/WebContent/doc/eclipse"/>
        <property name="manual.html.output.index" value="${manual.html.output.dir}/index-eclipse.html"/>

        <property name="output-dir-manual" value="${output-dir}/WebContent/doc/manual" />
    </target>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- Eclipse Manual                                                      -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <!-- Builds Eclipse Help plugin. Uses the manual-html-build target  -->
    <!-- to build the HTML content of the manual.                       -->
	<target name="manual-eclipse" depends="init, init-manual, init-manual-eclipse, init-manual-html-common, manual-html-build">
        <!-- The index-eclipse.html file is empty. -->
		<delete file="${manual.html.output.index}" />

        <!-- Plugin JAR filename -->
        <property name="eclipse.plugin.manual.jar-name"
                 value="com.itmill.toolkit.manual_${eclipse.plugin.manual.version}.jar" />

        <!-- Package the JAR. -->
        <jar jarfile="${output-dir}/${eclipse.plugin.manual.jar-name}" compress="true">
            <fileset dir="${manual.html.output.dir}">
				<patternset>
					<include name="**/*" />
				</patternset>
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Bundle-Name" value="IT Mill Toolkit Reference Manual"/>
                <attribute name="Bundle-SymbolicName" value="com.itmill.toolkit.manual"/>
                <attribute name="Bundle-Version" value="${eclipse.plugin.manual.version}"/>
                <attribute name="Bundle-Vendor" value="IT Mill Inc."/>
            </manifest>
        </jar>
	</target>

    <!-- ================================================================== -->
    <!-- Application Tutorial.                                              -->
    <!-- ================================================================== -->

    <!-- Initialize properties especially for the Reference Tutorial. -->
	<target name="init-tutorial" depends="">
        <!-- Sets the current date as the publication date of the Tutorial. -->
        <tstamp>
            <format property="tutorial.pubdate" pattern="yyyy-MM-dd"/>
        </tstamp>

		<mkdir dir="${output-dir}/WebContent/doc/tutorial" />
	</target>

	<!-- Build PDF tutorial from sources or just copy it. -->
	<target name="tutorial-pdf" depends="init, init-tutorial, build-tutorial-pdf, copy-tutorial-pdf">
	</target>

	<!-- Just copy a prebuilt PDF tutorial. -->
	<target name="copy-tutorial-pdf" unless="xep.license.available">
		<echo>PDF Tutorial: No XEP license available, just copy a prebuilt PDF.</echo>
		<copy file="doc/tutorial/itmill-toolkit-tutorial.pdf" tofile="${output-dir}/WebContent/doc/itmill-toolkit-tutorial.pdf" />
	</target>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<!-- Build PDF tutorial with XEP FO processor                            -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<target name="build-tutorial-pdf" if="xep.license.available">
		<echo>PDF Tutorial: processing images (TBD)</echo>
		<!-- TBD -->
		<echo>PDF Tutorial: converting xml to fo</echo>

        <echo>Publication date is ${tutorial.pubdate}</echo>

		<java classname="org.apache.xalan.xslt.Process" failonerror="yes" fork="yes" maxmemory="512m">
			<arg value="-xsl" />
			<arg value="build/docbook/conf/custom-fo-docbook.xsl" />
			<arg value="-in" />
			<arg value="doc/tutorial/tutorial.xml" />
			<arg value="-out" />
			<arg value="${result-path}/itmill-toolkit-tutorial.fo" />
			<arg value="-param" />
			<arg value="section.autolabel" />
			<arg value="1" />
			<arg value="-param" />
			<arg value="section.label.includes.component.label" />
			<arg value="1" />
			<arg value="-param" />
			<arg value="section.autolabel.max.depth" />
			<arg value="2" />
			<arg value="-param" />
			<arg value="draft.watermark.image" />
			<arg value="''" />
			<arg value="-param" />
			<arg value="draft.mode" />
			<arg value="'no'" />
			<arg value="-param" />
			<arg value="double.sided" />
			<arg value="1" />
			<arg value="-param" />
			<arg value="manual.pubdate" />
			<arg value="${tutorial.pubdate}" />
			<arg value="-param" />
			<arg value="manual.version" />
			<arg value="${version}" />
			<classpath>
				<pathelement location="build/lib/xalan.jar" />
				<pathelement location="build/lib/xercesImpl.jar" />
				<pathelement location="build/lib/xml-apis.jar" />
			</classpath>
		</java>
		<echo>PDF Tutorial: converting fo to pdf</echo>
		<!-- Run XEP FO processor to convert FO to PDF -->
		<java classname="com.renderx.xep.XSLDriver" error="${result-path}/xep-error.log" failonerror="yes" fork="yes" maxmemory="512m" input="${result-path}/itmill-toolkit-tutorial.fo" output="${output-dir}/WebContent/doc/itmill-toolkit-tutorial.pdf">
			<arg value="-Dcom.renderx.xep.CONFIG=build/lib/XEP/xep.xml" />
			<classpath>
				<pathelement location="build/lib/XEP/lib/tools.jar" />
				<pathelement location="build/lib/XEP/lib/xep.jar" />
				<pathelement location="build/lib/XEP/lib/saxon.jar" />
				<pathelement location="build/lib/XEP/lib/xt.jar" />
			</classpath>
		</java>
	</target>

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- HTML Tutorial                                                       -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<target name="tutorial-html" depends="init, init-tutorial, preprocess-src">
		<echo>Tutorial: HTML</echo>
        <echo>Publication date is ${tutorial.pubdate}</echo>

		<delete file="build/docbook/conf/temp.xsl" />
		<copy file="build/docbook/conf/custom-html-docbook.xsl" tofile="build/docbook/conf/temp.xsl">
			<filterchain>
				<replacetokens>
					<token key="BODYHEADER" value="${html.body.start1}${docbook.head.title}${html.body.start2}" />
					<token key="BODYFOOTER" value="${html.body.end}" />
				</replacetokens>
			</filterchain>
		</copy>
		<path id="docbook-xsl.classpath">
			<pathelement path="build/lib/fserializer.jar" />
			<pathelement path="build/lib/xalan.jar" />
			<pathelement path="build/lib/xercesImpl.jar" />
			<pathelement path="build/lib/xml-apis.jar" />
		</path>
		<java classname="org.apache.xalan.xslt.Process" failonerror="yes" fork="yes" maxmemory="512m">
			<arg value="-in" />
			<arg value="doc/tutorial/tutorial.xml" />
			<arg value="-xsl" />
			<arg value="build/docbook/conf/temp.xsl" />
			<arg value="-out" />
			<arg value="${output-dir}/WebContent/doc/tutorial/index.html" />
			<arg value="-param" />
			<arg value="section.autolabel" />
			<arg value="1" />
			<arg value="-param" />
			<arg value="section.label.includes.component.label" />
			<arg value="1" />
			<arg value="-param" />
			<arg value="section.autolabel.max.depth" />
			<arg value="2" />
			<arg value="-param" />
			<arg value="use.extensions" />
			<arg value="1" />
			<arg value="-param" />
			<arg value="manual.pubdate" />
			<arg value="${tutorial.pubdate}" />
			<arg value="-param" />
			<arg value="manual.version" />
			<arg value="${version}" />
			<classpath refid="docbook-xsl.classpath" />
		</java>
		<delete file="build/docbook/conf/temp.xsl" />
		<copy todir="${output-dir}/WebContent/doc/tutorial/img">
			<fileset dir="doc/tutorial/img">
				<exclude name="**/.svn" />
			</fileset>
		</copy>
	</target>

	<!-- ant contrib required for flow control (for loop, if, property override) -->
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath>
			<pathelement location="build/lib/ant-contrib-1.0b3.jar" />
		</classpath>
	</taskdef>

	<!-- java2html converter -->
	<taskdef name="java2html" classname="de.java2html.anttasks.Java2HtmlTask" classpath="build/lib/java2html.jar" />

</project>
